name: TRON CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 20

      - name: Install project dependencies
        run: npm install

      - name: Compile Contracts
        run: npx tronbox compile

      - name: Upload build artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: |
            build
            node_modules
            contracts
            migrations
            tronbox.js

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-output

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 20

      - name: Deploy to TRON (Nile) with validation
        run: |
          set -e
          # Run tronbox deploy, capture all output
          OUTPUT=$(npx tronbox deploy --network nile 2>&1)
          echo "$OUTPUT"

          # Search output for errors.
          # If "error", "revert" or "exception" appears (case-insensitive), fail the job.
          if echo "$OUTPUT" | grep -qi -E "ERROR:|revert|exception"; then
            echo "Deployment encountered an error!"
            exit 1
          fi
        env:
          PRIVATE_KEY_NILE: ${{ secrets.PRIVATE_KEY_NILE }}
          FULL_NODE_NILE: ${{ secrets.FULL_NODE_NILE }}
